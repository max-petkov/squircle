{"mappings":"AEGA;IACE,YAAY,CAAC,EAAE,MAAM,CAAA;IACrB,mBAAmB,CAAC,EAAE,MAAM,CAAA;IAC5B,oBAAoB,CAAC,EAAE,MAAM,CAAA;IAC7B,uBAAuB,CAAC,EAAE,MAAM,CAAA;IAChC,sBAAsB,CAAC,EAAE,MAAM,CAAA;IAC/B,eAAe,EAAE,MAAM,CAAA;IACvB,KAAK,EAAE,MAAM,CAAA;IACb,MAAM,EAAE,MAAM,CAAA;IACd,iBAAiB,CAAC,EAAE,OAAO,CAAA;CAC5B;AAED,2BAA2B,EACzB,YAAgB,EAChB,mBAAmB,EACnB,oBAAoB,EACpB,uBAAuB,EACvB,sBAAsB,EACtB,eAAe,EACf,KAAK,EACL,MAAM,EACN,iBAAyB,GAC1B,EAAE,mBAAmB,UA0ErB","sources":["packages/figma-squircle/src/src/distribute.ts","packages/figma-squircle/src/src/draw.ts","packages/figma-squircle/src/src/index.ts","packages/figma-squircle/src/index.ts"],"sourcesContent":[null,null,null,"import { distributeAndNormalize } from './distribute'\nimport { getPathParamsForCorner, getSVGPathFromPathParams } from './draw'\n\nexport interface FigmaSquircleParams {\n  cornerRadius?: number\n  topLeftCornerRadius?: number\n  topRightCornerRadius?: number\n  bottomRightCornerRadius?: number\n  bottomLeftCornerRadius?: number\n  cornerSmoothing: number\n  width: number\n  height: number\n  preserveSmoothing?: boolean\n}\n\nexport function getSvgPath({\n  cornerRadius = 0,\n  topLeftCornerRadius,\n  topRightCornerRadius,\n  bottomRightCornerRadius,\n  bottomLeftCornerRadius,\n  cornerSmoothing,\n  width,\n  height,\n  preserveSmoothing = false,\n}: FigmaSquircleParams) {\n  topLeftCornerRadius = topLeftCornerRadius ?? cornerRadius\n  topRightCornerRadius = topRightCornerRadius ?? cornerRadius\n  bottomLeftCornerRadius = bottomLeftCornerRadius ?? cornerRadius\n  bottomRightCornerRadius = bottomRightCornerRadius ?? cornerRadius\n\n  if (\n    topLeftCornerRadius === topRightCornerRadius &&\n    topRightCornerRadius === bottomRightCornerRadius &&\n    bottomRightCornerRadius === bottomLeftCornerRadius &&\n    bottomLeftCornerRadius === topLeftCornerRadius\n  ) {\n    const roundingAndSmoothingBudget = Math.min(width, height) / 2\n    const cornerRadius = Math.min(\n      topLeftCornerRadius,\n      roundingAndSmoothingBudget\n    )\n\n    const pathParams = getPathParamsForCorner({\n      cornerRadius,\n      cornerSmoothing,\n      preserveSmoothing,\n      roundingAndSmoothingBudget,\n    })\n\n    return getSVGPathFromPathParams({\n      width,\n      height,\n      topLeftPathParams: pathParams,\n      topRightPathParams: pathParams,\n      bottomLeftPathParams: pathParams,\n      bottomRightPathParams: pathParams,\n    })\n  }\n\n  const { topLeft, topRight, bottomLeft, bottomRight } = distributeAndNormalize(\n    {\n      topLeftCornerRadius,\n      topRightCornerRadius,\n      bottomRightCornerRadius,\n      bottomLeftCornerRadius,\n      width,\n      height,\n    }\n  )\n\n  return getSVGPathFromPathParams({\n    width,\n    height,\n    topLeftPathParams: getPathParamsForCorner({\n      cornerSmoothing,\n      preserveSmoothing,\n      cornerRadius: topLeft.radius,\n      roundingAndSmoothingBudget: topLeft.roundingAndSmoothingBudget,\n    }),\n    topRightPathParams: getPathParamsForCorner({\n      cornerSmoothing,\n      preserveSmoothing,\n      cornerRadius: topRight.radius,\n      roundingAndSmoothingBudget: topRight.roundingAndSmoothingBudget,\n    }),\n    bottomRightPathParams: getPathParamsForCorner({\n      cornerSmoothing,\n      preserveSmoothing,\n      cornerRadius: bottomRight.radius,\n      roundingAndSmoothingBudget: bottomRight.roundingAndSmoothingBudget,\n    }),\n    bottomLeftPathParams: getPathParamsForCorner({\n      cornerSmoothing,\n      preserveSmoothing,\n      cornerRadius: bottomLeft.radius,\n      roundingAndSmoothingBudget: bottomLeft.roundingAndSmoothingBudget,\n    }),\n  })\n}\n"],"names":[],"version":3,"file":"types.d.ts.map","sourceRoot":"../../../"}